Index.PACKAGES = {"io.github.bkosaraju.inferencer" : [{"name" : "io.github.bkosaraju.inferencer.AppFunctions", "shortDescription" : "", "members_class" : [{"label" : "DataHashGenerator", "tail" : "", "member" : "io.github.bkosaraju.utils.spark.DataHashGenerator.DataHashGenerator", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#DataHashGeneratorextendsSession", "kind" : "implicit class"}, {"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"member" : "io.github.bkosaraju.inferencer.AppFunctions#<init>", "error" : "unsupported entity"}, {"label" : "MANAGED_PROVIDER", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.MANAGED_PROVIDER", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#MANAGED_PROVIDER:String", "kind" : "lazy val"}, {"label" : "WRITER_FORMAT", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.WRITER_FORMAT", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#WRITER_FORMAT:String", "kind" : "lazy val"}, {"label" : "ARCHIVE_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.ARCHIVE_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#ARCHIVE_DIR:String", "kind" : "lazy val"}, {"label" : "PROCESSING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.PROCESSING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#PROCESSING_DIR:String", "kind" : "lazy val"}, {"label" : "LANDING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.LANDING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#LANDING_DIR:String", "kind" : "lazy val"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, dbtable: String, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,dbtable:String,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, targetPath: String, writeFormat: String, writeMode: String, writerOptions: Map[String, String], partitionColumns: String): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,targetPath:String,writeFormat:String,writeMode:String,writerOptions:Map[String,String],partitionColumns:String):Unit", "kind" : "def"}, {"label" : "getNumParts", "tail" : "(Df: DataFrame, blockSize: Long): DataFrame", "member" : "io.github.bkosaraju.utils.spark.WriteData.getNumParts", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getNumParts(Df:org.apache.spark.sql.DataFrame,blockSize:Long):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "moveData", "tail" : "(sourceURI: Path, targetURI: Path, filePattern: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.moveData", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#moveData(sourceURI:org.apache.hadoop.fs.Path,targetURI:org.apache.hadoop.fs.Path,filePattern:String):Unit", "kind" : "def"}, {"label" : "getRunId", "tail" : "(): String", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.getRunId", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getRunId:String", "kind" : "def"}, {"label" : "s3Utils", "tail" : ": AwsUtils", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.s3Utils", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#s3Utils:io.github.bkosaraju.utils.aws.AwsUtils", "kind" : "val"}, {"label" : "headerToColumns", "tail" : "(path: String, props: Properties): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.HeaderToColumns.headerToColumns", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#headerToColumns(path:String,props:java.util.Properties):Map[String,String]", "kind" : "def"}, {"label" : "archiveFiles", "tail" : "(location: String, srcPath: String, writemode: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.ArchiveFiles.archiveFiles", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#archiveFiles(location:String,srcPath:String,writemode:String):Unit", "kind" : "def"}, {"label" : "extractTaggedColumns", "tail" : "(fileName: String, filePattern: String, tokenList: Array[String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.ExtractTaggedColumns.extractTaggedColumns", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#extractTaggedColumns(fileName:String,filePattern:String,tokenList:Array[String]):Map[String,String]", "kind" : "def"}, {"label" : "getLatestDataSets", "tail" : "(location: String, readerFormat: String, writeMode: String): Array[String]", "member" : "io.github.bkosaraju.inferencer.functions.GetLatestDataSets.getLatestDataSets", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getLatestDataSets(location:String,readerFormat:String,writeMode:String):Array[String]", "kind" : "def"}, {"label" : "loadTableandRegister", "tail" : "(hiveDatabase: String, hiveTable: String, tempView: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableandRegister.loadTableandRegister", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#loadTableandRegister(hiveDatabase:String,hiveTable:String,tempView:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "writeHiveTable", "tail" : "(tDf: DataFrame, hiveDB: String, hiveTable: String, writeMode: String, partitionCols: String, curationFlag: String, dataSize: Int): Unit", "member" : "io.github.bkosaraju.inferencer.functions.WriteHiveTable.writeHiveTable", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#writeHiveTable(tDf:org.apache.spark.sql.DataFrame,hiveDB:String,hiveTable:String,writeMode:String,partitionCols:String,curationFlag:String,dataSize:Int):Unit", "kind" : "def"}, {"label" : "removeHdfsData", "tail" : "(location: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHdfsData.removeHdfsData", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#removeHdfsData(location:String):Unit", "kind" : "def"}, {"label" : "loadTableVars", "tail" : "(configMap: LinkedHashMap[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableVars.loadTableVars", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#loadTableVars(configMap:scala.collection.mutable.LinkedHashMap[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "srcToTgtColRename", "tail" : "(df: DataFrame, mappings: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColRename.srcToTgtColRename", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#srcToTgtColRename(df:org.apache.spark.sql.DataFrame,mappings:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getCuratedDF", "tail" : "(sourceFile: String, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.GetCuratedDF.getCuratedDF", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getCuratedDF(sourceFile:String,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getExternalSchema", "tail" : "(schemaFile: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.GetExternalSchema.getExternalSchema", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getExternalSchema(schemaFile:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getDttmCols", "tail" : "(sch: StructType, dtTmCols: Map[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.GetDttmCols.getDttmCols", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getDttmCols(sch:org.apache.spark.sql.types.StructType,dtTmCols:Map[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "loadFixedWidthFile", "tail" : "(path: String, recordLayout: String, cleanseChar: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadFixedWidthFile.loadFixedWidthFile", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#loadFixedWidthFile(path:String,recordLayout:String,cleanseChar:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "dataTypeValidation", "tail" : "(convSrcDttmDF: DataFrame, srcDF: DataFrame, srcConvSchema: StructType, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.DataTypeValidation.dataTypeValidation", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#dataTypeValidation(convSrcDttmDF:org.apache.spark.sql.DataFrame,srcDF:org.apache.spark.sql.DataFrame,srcConvSchema:org.apache.spark.sql.types.StructType,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getTargetValidationFilter", "tail" : "(schema: StructType): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetValidationFilter.getTargetValidationFilter", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getTargetValidationFilter(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "getTargetSelList", "tail" : "(schema: StructType, custTransMap: Map[String, String]): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetSelList.getTargetSelList", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getTargetSelList(schema:org.apache.spark.sql.types.StructType,custTransMap:Map[String,String]):String", "kind" : "def"}, {"label" : "amendDwsCols", "tail" : "(stgDF: DataFrame, dwsVals: Map[String, String], tgtSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.AmendDwsCols.amendDwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#amendDwsCols(stgDF:org.apache.spark.sql.DataFrame,dwsVals:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "convNonStdDateTimes", "tail" : "(df: DataFrame, dtTmCols: Map[String, String], tgtSchema: StructType, errorThresholdPercent: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.ConvNonStdDateTimes.convNonStdDateTimes", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#convNonStdDateTimes(df:org.apache.spark.sql.DataFrame,dtTmCols:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType,errorThresholdPercent:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "loadDataFile", "tail" : "(path: String, recDelimiter: String, fieldDelimiter: String, cleanseChar: String, readerFormat: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadDataFile.loadDataFile", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#loadDataFile(path:String,recDelimiter:String,fieldDelimiter:String,cleanseChar:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "loadRdd", "tail" : "(path: String, readerFormat: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[(String, String)]", "member" : "io.github.bkosaraju.inferencer.functions.LoadRdd.loadRdd", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#loadRdd(path:String,readerFormat:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[(String,String)]", "kind" : "def"}, {"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "loadStdDF", "tail" : "(path: String, readerFormat: String, readerOptions: Map[String, String], recordSchema: StructType, conRecordSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadStdDF.loadStdDF", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#loadStdDF(path:String,readerFormat:String,readerOptions:Map[String,String],recordSchema:org.apache.spark.sql.types.StructType,conRecordSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "isSchemaSame", "tail" : "(schema1: StructType, schema2: StructType): Boolean", "member" : "io.github.bkosaraju.inferencer.functions.IsSchemaSame.isSchemaSame", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#isSchemaSame(schema1:org.apache.spark.sql.types.StructType,schema2:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "getStgSchema", "tail" : "(schema: StructType, processCols: Seq[String], mappings: Map[String, String]): Array[StructType]", "member" : "io.github.bkosaraju.inferencer.functions.GetStgSchema.getStgSchema", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getStgSchema(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String],mappings:Map[String,String]):Array[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "srcToTgtColSchemaChange", "tail" : "(schema: StructType, mappings: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColSchemaChange.srcToTgtColSchemaChange", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#srcToTgtColSchemaChange(schema:org.apache.spark.sql.types.StructType,mappings:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "dropdwsCols", "tail" : "(schema: StructType, processCols: Seq[String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.DropdwsCols.dropdwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#dropdwsCols(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String, readerFormat: String, readerOptions: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#loadSchema(databaseName:String,tableName:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#loadSchema(databaseName:String,tableName:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.logger", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(sourceDatabase: String, sourceTable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#readFromTable(sourceDatabase:String,sourceTable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(dbtable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#readFromTable(dbtable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#readFromTable(readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "hadoopfs", "tail" : "(): FileSystem", "member" : "io.github.bkosaraju.utils.spark.Context.hadoopfs", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#hadoopfs:org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/bkosaraju\/inferencer\/AppFunctions.html", "kind" : "class"}, {"name" : "io.github.bkosaraju.inferencer.Inferencer", "shortDescription" : "", "object" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html", "members_object" : [{"label" : "LoadProperties", "tail" : "", "member" : "io.github.bkosaraju.utils.common.LoadProperties.LoadProperties", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#LoadPropertiesextendsSession", "kind" : "implicit class"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "io.github.bkosaraju.inferencer.Inferencer.main", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.bkosaraju.inferencer.Inferencer.logger", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "MANAGED_PROVIDER", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.MANAGED_PROVIDER", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#MANAGED_PROVIDER:String", "kind" : "lazy val"}, {"label" : "WRITER_FORMAT", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.WRITER_FORMAT", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#WRITER_FORMAT:String", "kind" : "lazy val"}, {"label" : "ARCHIVE_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.ARCHIVE_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#ARCHIVE_DIR:String", "kind" : "lazy val"}, {"label" : "PROCESSING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.PROCESSING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#PROCESSING_DIR:String", "kind" : "lazy val"}, {"label" : "LANDING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.LANDING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#LANDING_DIR:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/Inferencer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.bkosaraju.inferencer.Launcher", "shortDescription" : "", "object" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html", "members_object" : [{"label" : "DataHashGenerator", "tail" : "", "member" : "io.github.bkosaraju.utils.spark.DataHashGenerator.DataHashGenerator", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#DataHashGeneratorextendsSession", "kind" : "implicit class"}, {"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "io.github.bkosaraju.inferencer.Launcher.main", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "MANAGED_PROVIDER", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.MANAGED_PROVIDER", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#MANAGED_PROVIDER:String", "kind" : "lazy val"}, {"label" : "WRITER_FORMAT", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.WRITER_FORMAT", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#WRITER_FORMAT:String", "kind" : "lazy val"}, {"label" : "ARCHIVE_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.ARCHIVE_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#ARCHIVE_DIR:String", "kind" : "lazy val"}, {"label" : "PROCESSING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.PROCESSING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#PROCESSING_DIR:String", "kind" : "lazy val"}, {"label" : "LANDING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.LANDING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#LANDING_DIR:String", "kind" : "lazy val"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, dbtable: String, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,dbtable:String,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, targetPath: String, writeFormat: String, writeMode: String, writerOptions: Map[String, String], partitionColumns: String): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,targetPath:String,writeFormat:String,writeMode:String,writerOptions:Map[String,String],partitionColumns:String):Unit", "kind" : "def"}, {"label" : "getNumParts", "tail" : "(Df: DataFrame, blockSize: Long): DataFrame", "member" : "io.github.bkosaraju.utils.spark.WriteData.getNumParts", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getNumParts(Df:org.apache.spark.sql.DataFrame,blockSize:Long):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "moveData", "tail" : "(sourceURI: Path, targetURI: Path, filePattern: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.moveData", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#moveData(sourceURI:org.apache.hadoop.fs.Path,targetURI:org.apache.hadoop.fs.Path,filePattern:String):Unit", "kind" : "def"}, {"label" : "getRunId", "tail" : "(): String", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.getRunId", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getRunId:String", "kind" : "def"}, {"label" : "s3Utils", "tail" : ": AwsUtils", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.s3Utils", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#s3Utils:io.github.bkosaraju.utils.aws.AwsUtils", "kind" : "val"}, {"label" : "headerToColumns", "tail" : "(path: String, props: Properties): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.HeaderToColumns.headerToColumns", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#headerToColumns(path:String,props:java.util.Properties):Map[String,String]", "kind" : "def"}, {"label" : "archiveFiles", "tail" : "(location: String, srcPath: String, writemode: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.ArchiveFiles.archiveFiles", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#archiveFiles(location:String,srcPath:String,writemode:String):Unit", "kind" : "def"}, {"label" : "extractTaggedColumns", "tail" : "(fileName: String, filePattern: String, tokenList: Array[String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.ExtractTaggedColumns.extractTaggedColumns", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#extractTaggedColumns(fileName:String,filePattern:String,tokenList:Array[String]):Map[String,String]", "kind" : "def"}, {"label" : "getLatestDataSets", "tail" : "(location: String, readerFormat: String, writeMode: String): Array[String]", "member" : "io.github.bkosaraju.inferencer.functions.GetLatestDataSets.getLatestDataSets", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getLatestDataSets(location:String,readerFormat:String,writeMode:String):Array[String]", "kind" : "def"}, {"label" : "loadTableandRegister", "tail" : "(hiveDatabase: String, hiveTable: String, tempView: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableandRegister.loadTableandRegister", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#loadTableandRegister(hiveDatabase:String,hiveTable:String,tempView:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "writeHiveTable", "tail" : "(tDf: DataFrame, hiveDB: String, hiveTable: String, writeMode: String, partitionCols: String, curationFlag: String, dataSize: Int): Unit", "member" : "io.github.bkosaraju.inferencer.functions.WriteHiveTable.writeHiveTable", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#writeHiveTable(tDf:org.apache.spark.sql.DataFrame,hiveDB:String,hiveTable:String,writeMode:String,partitionCols:String,curationFlag:String,dataSize:Int):Unit", "kind" : "def"}, {"label" : "removeHdfsData", "tail" : "(location: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHdfsData.removeHdfsData", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#removeHdfsData(location:String):Unit", "kind" : "def"}, {"label" : "loadTableVars", "tail" : "(configMap: LinkedHashMap[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableVars.loadTableVars", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#loadTableVars(configMap:scala.collection.mutable.LinkedHashMap[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "srcToTgtColRename", "tail" : "(df: DataFrame, mappings: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColRename.srcToTgtColRename", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#srcToTgtColRename(df:org.apache.spark.sql.DataFrame,mappings:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getCuratedDF", "tail" : "(sourceFile: String, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.GetCuratedDF.getCuratedDF", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getCuratedDF(sourceFile:String,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getExternalSchema", "tail" : "(schemaFile: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.GetExternalSchema.getExternalSchema", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getExternalSchema(schemaFile:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getDttmCols", "tail" : "(sch: StructType, dtTmCols: Map[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.GetDttmCols.getDttmCols", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getDttmCols(sch:org.apache.spark.sql.types.StructType,dtTmCols:Map[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "loadFixedWidthFile", "tail" : "(path: String, recordLayout: String, cleanseChar: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadFixedWidthFile.loadFixedWidthFile", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#loadFixedWidthFile(path:String,recordLayout:String,cleanseChar:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "dataTypeValidation", "tail" : "(convSrcDttmDF: DataFrame, srcDF: DataFrame, srcConvSchema: StructType, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.DataTypeValidation.dataTypeValidation", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#dataTypeValidation(convSrcDttmDF:org.apache.spark.sql.DataFrame,srcDF:org.apache.spark.sql.DataFrame,srcConvSchema:org.apache.spark.sql.types.StructType,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getTargetValidationFilter", "tail" : "(schema: StructType): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetValidationFilter.getTargetValidationFilter", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getTargetValidationFilter(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "getTargetSelList", "tail" : "(schema: StructType, custTransMap: Map[String, String]): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetSelList.getTargetSelList", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getTargetSelList(schema:org.apache.spark.sql.types.StructType,custTransMap:Map[String,String]):String", "kind" : "def"}, {"label" : "amendDwsCols", "tail" : "(stgDF: DataFrame, dwsVals: Map[String, String], tgtSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.AmendDwsCols.amendDwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#amendDwsCols(stgDF:org.apache.spark.sql.DataFrame,dwsVals:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "convNonStdDateTimes", "tail" : "(df: DataFrame, dtTmCols: Map[String, String], tgtSchema: StructType, errorThresholdPercent: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.ConvNonStdDateTimes.convNonStdDateTimes", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#convNonStdDateTimes(df:org.apache.spark.sql.DataFrame,dtTmCols:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType,errorThresholdPercent:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "loadDataFile", "tail" : "(path: String, recDelimiter: String, fieldDelimiter: String, cleanseChar: String, readerFormat: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadDataFile.loadDataFile", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#loadDataFile(path:String,recDelimiter:String,fieldDelimiter:String,cleanseChar:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "loadRdd", "tail" : "(path: String, readerFormat: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[(String, String)]", "member" : "io.github.bkosaraju.inferencer.functions.LoadRdd.loadRdd", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#loadRdd(path:String,readerFormat:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[(String,String)]", "kind" : "def"}, {"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "loadStdDF", "tail" : "(path: String, readerFormat: String, readerOptions: Map[String, String], recordSchema: StructType, conRecordSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadStdDF.loadStdDF", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#loadStdDF(path:String,readerFormat:String,readerOptions:Map[String,String],recordSchema:org.apache.spark.sql.types.StructType,conRecordSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "isSchemaSame", "tail" : "(schema1: StructType, schema2: StructType): Boolean", "member" : "io.github.bkosaraju.inferencer.functions.IsSchemaSame.isSchemaSame", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#isSchemaSame(schema1:org.apache.spark.sql.types.StructType,schema2:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "getStgSchema", "tail" : "(schema: StructType, processCols: Seq[String], mappings: Map[String, String]): Array[StructType]", "member" : "io.github.bkosaraju.inferencer.functions.GetStgSchema.getStgSchema", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getStgSchema(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String],mappings:Map[String,String]):Array[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "srcToTgtColSchemaChange", "tail" : "(schema: StructType, mappings: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColSchemaChange.srcToTgtColSchemaChange", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#srcToTgtColSchemaChange(schema:org.apache.spark.sql.types.StructType,mappings:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "dropdwsCols", "tail" : "(schema: StructType, processCols: Seq[String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.DropdwsCols.dropdwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#dropdwsCols(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String, readerFormat: String, readerOptions: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#loadSchema(databaseName:String,tableName:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#loadSchema(databaseName:String,tableName:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.logger", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(sourceDatabase: String, sourceTable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#readFromTable(sourceDatabase:String,sourceTable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(dbtable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#readFromTable(dbtable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#readFromTable(readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "hadoopfs", "tail" : "(): FileSystem", "member" : "io.github.bkosaraju.utils.spark.Context.hadoopfs", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#hadoopfs:org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/Launcher$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.github.bkosaraju.inferencer.LoadCuratedData", "shortDescription" : "", "members_class" : [{"label" : "DataHashGenerator", "tail" : "", "member" : "io.github.bkosaraju.utils.spark.DataHashGenerator.DataHashGenerator", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#DataHashGeneratorextendsSession", "kind" : "implicit class"}, {"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "loadCuratedData", "tail" : "(props: Properties): Unit", "member" : "io.github.bkosaraju.inferencer.LoadCuratedData.loadCuratedData", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#loadCuratedData(props:java.util.Properties):Unit", "kind" : "def"}, {"label" : "edwsCols", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.LoadCuratedData.edwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#edwsCols:String", "kind" : "var"}, {"member" : "io.github.bkosaraju.inferencer.LoadCuratedData#<init>", "error" : "unsupported entity"}, {"label" : "MANAGED_PROVIDER", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.MANAGED_PROVIDER", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#MANAGED_PROVIDER:String", "kind" : "lazy val"}, {"label" : "WRITER_FORMAT", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.WRITER_FORMAT", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#WRITER_FORMAT:String", "kind" : "lazy val"}, {"label" : "ARCHIVE_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.ARCHIVE_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#ARCHIVE_DIR:String", "kind" : "lazy val"}, {"label" : "PROCESSING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.PROCESSING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#PROCESSING_DIR:String", "kind" : "lazy val"}, {"label" : "LANDING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.LANDING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#LANDING_DIR:String", "kind" : "lazy val"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, dbtable: String, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,dbtable:String,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, targetPath: String, writeFormat: String, writeMode: String, writerOptions: Map[String, String], partitionColumns: String): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,targetPath:String,writeFormat:String,writeMode:String,writerOptions:Map[String,String],partitionColumns:String):Unit", "kind" : "def"}, {"label" : "getNumParts", "tail" : "(Df: DataFrame, blockSize: Long): DataFrame", "member" : "io.github.bkosaraju.utils.spark.WriteData.getNumParts", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getNumParts(Df:org.apache.spark.sql.DataFrame,blockSize:Long):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "moveData", "tail" : "(sourceURI: Path, targetURI: Path, filePattern: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.moveData", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#moveData(sourceURI:org.apache.hadoop.fs.Path,targetURI:org.apache.hadoop.fs.Path,filePattern:String):Unit", "kind" : "def"}, {"label" : "getRunId", "tail" : "(): String", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.getRunId", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getRunId:String", "kind" : "def"}, {"label" : "s3Utils", "tail" : ": AwsUtils", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.s3Utils", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#s3Utils:io.github.bkosaraju.utils.aws.AwsUtils", "kind" : "val"}, {"label" : "headerToColumns", "tail" : "(path: String, props: Properties): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.HeaderToColumns.headerToColumns", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#headerToColumns(path:String,props:java.util.Properties):Map[String,String]", "kind" : "def"}, {"label" : "archiveFiles", "tail" : "(location: String, srcPath: String, writemode: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.ArchiveFiles.archiveFiles", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#archiveFiles(location:String,srcPath:String,writemode:String):Unit", "kind" : "def"}, {"label" : "extractTaggedColumns", "tail" : "(fileName: String, filePattern: String, tokenList: Array[String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.ExtractTaggedColumns.extractTaggedColumns", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#extractTaggedColumns(fileName:String,filePattern:String,tokenList:Array[String]):Map[String,String]", "kind" : "def"}, {"label" : "getLatestDataSets", "tail" : "(location: String, readerFormat: String, writeMode: String): Array[String]", "member" : "io.github.bkosaraju.inferencer.functions.GetLatestDataSets.getLatestDataSets", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getLatestDataSets(location:String,readerFormat:String,writeMode:String):Array[String]", "kind" : "def"}, {"label" : "loadTableandRegister", "tail" : "(hiveDatabase: String, hiveTable: String, tempView: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableandRegister.loadTableandRegister", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#loadTableandRegister(hiveDatabase:String,hiveTable:String,tempView:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "writeHiveTable", "tail" : "(tDf: DataFrame, hiveDB: String, hiveTable: String, writeMode: String, partitionCols: String, curationFlag: String, dataSize: Int): Unit", "member" : "io.github.bkosaraju.inferencer.functions.WriteHiveTable.writeHiveTable", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#writeHiveTable(tDf:org.apache.spark.sql.DataFrame,hiveDB:String,hiveTable:String,writeMode:String,partitionCols:String,curationFlag:String,dataSize:Int):Unit", "kind" : "def"}, {"label" : "removeHdfsData", "tail" : "(location: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHdfsData.removeHdfsData", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#removeHdfsData(location:String):Unit", "kind" : "def"}, {"label" : "loadTableVars", "tail" : "(configMap: LinkedHashMap[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableVars.loadTableVars", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#loadTableVars(configMap:scala.collection.mutable.LinkedHashMap[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "srcToTgtColRename", "tail" : "(df: DataFrame, mappings: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColRename.srcToTgtColRename", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#srcToTgtColRename(df:org.apache.spark.sql.DataFrame,mappings:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getCuratedDF", "tail" : "(sourceFile: String, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.GetCuratedDF.getCuratedDF", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getCuratedDF(sourceFile:String,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getExternalSchema", "tail" : "(schemaFile: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.GetExternalSchema.getExternalSchema", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getExternalSchema(schemaFile:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getDttmCols", "tail" : "(sch: StructType, dtTmCols: Map[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.GetDttmCols.getDttmCols", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getDttmCols(sch:org.apache.spark.sql.types.StructType,dtTmCols:Map[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "loadFixedWidthFile", "tail" : "(path: String, recordLayout: String, cleanseChar: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadFixedWidthFile.loadFixedWidthFile", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#loadFixedWidthFile(path:String,recordLayout:String,cleanseChar:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "dataTypeValidation", "tail" : "(convSrcDttmDF: DataFrame, srcDF: DataFrame, srcConvSchema: StructType, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.DataTypeValidation.dataTypeValidation", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#dataTypeValidation(convSrcDttmDF:org.apache.spark.sql.DataFrame,srcDF:org.apache.spark.sql.DataFrame,srcConvSchema:org.apache.spark.sql.types.StructType,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getTargetValidationFilter", "tail" : "(schema: StructType): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetValidationFilter.getTargetValidationFilter", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getTargetValidationFilter(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "getTargetSelList", "tail" : "(schema: StructType, custTransMap: Map[String, String]): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetSelList.getTargetSelList", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getTargetSelList(schema:org.apache.spark.sql.types.StructType,custTransMap:Map[String,String]):String", "kind" : "def"}, {"label" : "amendDwsCols", "tail" : "(stgDF: DataFrame, dwsVals: Map[String, String], tgtSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.AmendDwsCols.amendDwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#amendDwsCols(stgDF:org.apache.spark.sql.DataFrame,dwsVals:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "convNonStdDateTimes", "tail" : "(df: DataFrame, dtTmCols: Map[String, String], tgtSchema: StructType, errorThresholdPercent: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.ConvNonStdDateTimes.convNonStdDateTimes", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#convNonStdDateTimes(df:org.apache.spark.sql.DataFrame,dtTmCols:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType,errorThresholdPercent:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "loadDataFile", "tail" : "(path: String, recDelimiter: String, fieldDelimiter: String, cleanseChar: String, readerFormat: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadDataFile.loadDataFile", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#loadDataFile(path:String,recDelimiter:String,fieldDelimiter:String,cleanseChar:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "loadRdd", "tail" : "(path: String, readerFormat: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[(String, String)]", "member" : "io.github.bkosaraju.inferencer.functions.LoadRdd.loadRdd", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#loadRdd(path:String,readerFormat:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[(String,String)]", "kind" : "def"}, {"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "loadStdDF", "tail" : "(path: String, readerFormat: String, readerOptions: Map[String, String], recordSchema: StructType, conRecordSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadStdDF.loadStdDF", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#loadStdDF(path:String,readerFormat:String,readerOptions:Map[String,String],recordSchema:org.apache.spark.sql.types.StructType,conRecordSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "isSchemaSame", "tail" : "(schema1: StructType, schema2: StructType): Boolean", "member" : "io.github.bkosaraju.inferencer.functions.IsSchemaSame.isSchemaSame", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#isSchemaSame(schema1:org.apache.spark.sql.types.StructType,schema2:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "getStgSchema", "tail" : "(schema: StructType, processCols: Seq[String], mappings: Map[String, String]): Array[StructType]", "member" : "io.github.bkosaraju.inferencer.functions.GetStgSchema.getStgSchema", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getStgSchema(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String],mappings:Map[String,String]):Array[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "srcToTgtColSchemaChange", "tail" : "(schema: StructType, mappings: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColSchemaChange.srcToTgtColSchemaChange", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#srcToTgtColSchemaChange(schema:org.apache.spark.sql.types.StructType,mappings:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "dropdwsCols", "tail" : "(schema: StructType, processCols: Seq[String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.DropdwsCols.dropdwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#dropdwsCols(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String, readerFormat: String, readerOptions: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#loadSchema(databaseName:String,tableName:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#loadSchema(databaseName:String,tableName:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.logger", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(sourceDatabase: String, sourceTable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#readFromTable(sourceDatabase:String,sourceTable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(dbtable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#readFromTable(dbtable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#readFromTable(readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "hadoopfs", "tail" : "(): FileSystem", "member" : "io.github.bkosaraju.utils.spark.Context.hadoopfs", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#hadoopfs:org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/bkosaraju\/inferencer\/LoadCuratedData.html", "kind" : "class"}, {"name" : "io.github.bkosaraju.inferencer.LoadProperties", "shortDescription" : "", "members_class" : [{"label" : "DataHashGenerator", "tail" : "", "member" : "io.github.bkosaraju.utils.spark.DataHashGenerator.DataHashGenerator", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#DataHashGeneratorextendsSession", "kind" : "implicit class"}, {"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "loadCustomProperties", "tail" : "(hadoopfs: FileSystem, propfl: String, prop: Properties): Properties", "member" : "io.github.bkosaraju.inferencer.LoadProperties.loadCustomProperties", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadCustomProperties(hadoopfs:org.apache.hadoop.fs.FileSystem,propfl:String,prop:java.util.Properties):java.util.Properties", "kind" : "def"}, {"label" : "loadLocalappProps", "tail" : "(appProps: String): Properties", "member" : "io.github.bkosaraju.inferencer.LoadProperties.loadLocalappProps", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadLocalappProps(appProps:String):java.util.Properties", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.bkosaraju.inferencer.LoadProperties.logger", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "io.github.bkosaraju.inferencer.LoadProperties#<init>", "error" : "unsupported entity"}, {"label" : "MANAGED_PROVIDER", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.MANAGED_PROVIDER", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#MANAGED_PROVIDER:String", "kind" : "lazy val"}, {"label" : "WRITER_FORMAT", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.WRITER_FORMAT", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#WRITER_FORMAT:String", "kind" : "lazy val"}, {"label" : "ARCHIVE_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.ARCHIVE_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#ARCHIVE_DIR:String", "kind" : "lazy val"}, {"label" : "PROCESSING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.PROCESSING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#PROCESSING_DIR:String", "kind" : "lazy val"}, {"label" : "LANDING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.LANDING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#LANDING_DIR:String", "kind" : "lazy val"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, dbtable: String, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,dbtable:String,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, targetPath: String, writeFormat: String, writeMode: String, writerOptions: Map[String, String], partitionColumns: String): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,targetPath:String,writeFormat:String,writeMode:String,writerOptions:Map[String,String],partitionColumns:String):Unit", "kind" : "def"}, {"label" : "getNumParts", "tail" : "(Df: DataFrame, blockSize: Long): DataFrame", "member" : "io.github.bkosaraju.utils.spark.WriteData.getNumParts", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getNumParts(Df:org.apache.spark.sql.DataFrame,blockSize:Long):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "moveData", "tail" : "(sourceURI: Path, targetURI: Path, filePattern: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.moveData", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#moveData(sourceURI:org.apache.hadoop.fs.Path,targetURI:org.apache.hadoop.fs.Path,filePattern:String):Unit", "kind" : "def"}, {"label" : "getRunId", "tail" : "(): String", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.getRunId", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getRunId:String", "kind" : "def"}, {"label" : "s3Utils", "tail" : ": AwsUtils", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.s3Utils", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#s3Utils:io.github.bkosaraju.utils.aws.AwsUtils", "kind" : "val"}, {"label" : "headerToColumns", "tail" : "(path: String, props: Properties): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.HeaderToColumns.headerToColumns", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#headerToColumns(path:String,props:java.util.Properties):Map[String,String]", "kind" : "def"}, {"label" : "archiveFiles", "tail" : "(location: String, srcPath: String, writemode: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.ArchiveFiles.archiveFiles", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#archiveFiles(location:String,srcPath:String,writemode:String):Unit", "kind" : "def"}, {"label" : "extractTaggedColumns", "tail" : "(fileName: String, filePattern: String, tokenList: Array[String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.ExtractTaggedColumns.extractTaggedColumns", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#extractTaggedColumns(fileName:String,filePattern:String,tokenList:Array[String]):Map[String,String]", "kind" : "def"}, {"label" : "getLatestDataSets", "tail" : "(location: String, readerFormat: String, writeMode: String): Array[String]", "member" : "io.github.bkosaraju.inferencer.functions.GetLatestDataSets.getLatestDataSets", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getLatestDataSets(location:String,readerFormat:String,writeMode:String):Array[String]", "kind" : "def"}, {"label" : "loadTableandRegister", "tail" : "(hiveDatabase: String, hiveTable: String, tempView: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableandRegister.loadTableandRegister", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadTableandRegister(hiveDatabase:String,hiveTable:String,tempView:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "writeHiveTable", "tail" : "(tDf: DataFrame, hiveDB: String, hiveTable: String, writeMode: String, partitionCols: String, curationFlag: String, dataSize: Int): Unit", "member" : "io.github.bkosaraju.inferencer.functions.WriteHiveTable.writeHiveTable", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#writeHiveTable(tDf:org.apache.spark.sql.DataFrame,hiveDB:String,hiveTable:String,writeMode:String,partitionCols:String,curationFlag:String,dataSize:Int):Unit", "kind" : "def"}, {"label" : "removeHdfsData", "tail" : "(location: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHdfsData.removeHdfsData", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#removeHdfsData(location:String):Unit", "kind" : "def"}, {"label" : "loadTableVars", "tail" : "(configMap: LinkedHashMap[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableVars.loadTableVars", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadTableVars(configMap:scala.collection.mutable.LinkedHashMap[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "srcToTgtColRename", "tail" : "(df: DataFrame, mappings: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColRename.srcToTgtColRename", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#srcToTgtColRename(df:org.apache.spark.sql.DataFrame,mappings:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getCuratedDF", "tail" : "(sourceFile: String, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.GetCuratedDF.getCuratedDF", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getCuratedDF(sourceFile:String,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getExternalSchema", "tail" : "(schemaFile: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.GetExternalSchema.getExternalSchema", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getExternalSchema(schemaFile:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getDttmCols", "tail" : "(sch: StructType, dtTmCols: Map[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.GetDttmCols.getDttmCols", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getDttmCols(sch:org.apache.spark.sql.types.StructType,dtTmCols:Map[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "loadFixedWidthFile", "tail" : "(path: String, recordLayout: String, cleanseChar: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadFixedWidthFile.loadFixedWidthFile", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadFixedWidthFile(path:String,recordLayout:String,cleanseChar:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "dataTypeValidation", "tail" : "(convSrcDttmDF: DataFrame, srcDF: DataFrame, srcConvSchema: StructType, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.DataTypeValidation.dataTypeValidation", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#dataTypeValidation(convSrcDttmDF:org.apache.spark.sql.DataFrame,srcDF:org.apache.spark.sql.DataFrame,srcConvSchema:org.apache.spark.sql.types.StructType,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getTargetValidationFilter", "tail" : "(schema: StructType): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetValidationFilter.getTargetValidationFilter", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getTargetValidationFilter(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "getTargetSelList", "tail" : "(schema: StructType, custTransMap: Map[String, String]): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetSelList.getTargetSelList", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getTargetSelList(schema:org.apache.spark.sql.types.StructType,custTransMap:Map[String,String]):String", "kind" : "def"}, {"label" : "amendDwsCols", "tail" : "(stgDF: DataFrame, dwsVals: Map[String, String], tgtSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.AmendDwsCols.amendDwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#amendDwsCols(stgDF:org.apache.spark.sql.DataFrame,dwsVals:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "convNonStdDateTimes", "tail" : "(df: DataFrame, dtTmCols: Map[String, String], tgtSchema: StructType, errorThresholdPercent: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.ConvNonStdDateTimes.convNonStdDateTimes", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#convNonStdDateTimes(df:org.apache.spark.sql.DataFrame,dtTmCols:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType,errorThresholdPercent:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "loadDataFile", "tail" : "(path: String, recDelimiter: String, fieldDelimiter: String, cleanseChar: String, readerFormat: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadDataFile.loadDataFile", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadDataFile(path:String,recDelimiter:String,fieldDelimiter:String,cleanseChar:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "loadRdd", "tail" : "(path: String, readerFormat: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[(String, String)]", "member" : "io.github.bkosaraju.inferencer.functions.LoadRdd.loadRdd", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadRdd(path:String,readerFormat:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[(String,String)]", "kind" : "def"}, {"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "loadStdDF", "tail" : "(path: String, readerFormat: String, readerOptions: Map[String, String], recordSchema: StructType, conRecordSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadStdDF.loadStdDF", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadStdDF(path:String,readerFormat:String,readerOptions:Map[String,String],recordSchema:org.apache.spark.sql.types.StructType,conRecordSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "isSchemaSame", "tail" : "(schema1: StructType, schema2: StructType): Boolean", "member" : "io.github.bkosaraju.inferencer.functions.IsSchemaSame.isSchemaSame", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#isSchemaSame(schema1:org.apache.spark.sql.types.StructType,schema2:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "getStgSchema", "tail" : "(schema: StructType, processCols: Seq[String], mappings: Map[String, String]): Array[StructType]", "member" : "io.github.bkosaraju.inferencer.functions.GetStgSchema.getStgSchema", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getStgSchema(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String],mappings:Map[String,String]):Array[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "srcToTgtColSchemaChange", "tail" : "(schema: StructType, mappings: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColSchemaChange.srcToTgtColSchemaChange", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#srcToTgtColSchemaChange(schema:org.apache.spark.sql.types.StructType,mappings:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "dropdwsCols", "tail" : "(schema: StructType, processCols: Seq[String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.DropdwsCols.dropdwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#dropdwsCols(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String, readerFormat: String, readerOptions: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadSchema(databaseName:String,tableName:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#loadSchema(databaseName:String,tableName:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(sourceDatabase: String, sourceTable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#readFromTable(sourceDatabase:String,sourceTable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(dbtable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#readFromTable(dbtable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#readFromTable(readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "hadoopfs", "tail" : "(): FileSystem", "member" : "io.github.bkosaraju.utils.spark.Context.hadoopfs", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#hadoopfs:org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/bkosaraju\/inferencer\/LoadProperties.html", "kind" : "class"}], "io.github" : [], "io" : [], "io.github.bkosaraju" : [], "io.github.bkosaraju.inferencer.functions" : [{"name" : "io.github.bkosaraju.inferencer.functions.AmendDwsCols", "members_trait" : [{"label" : "amendDwsCols", "tail" : "(stgDF: DataFrame, dwsVals: Map[String, String], tgtSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.AmendDwsCols.amendDwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#amendDwsCols(stgDF:org.apache.spark.sql.DataFrame,dwsVals:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/AmendDwsCols.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.AppConfig", "members_trait" : [{"label" : "MANAGED_PROVIDER", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.MANAGED_PROVIDER", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#MANAGED_PROVIDER:String", "kind" : "lazy val"}, {"label" : "WRITER_FORMAT", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.WRITER_FORMAT", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#WRITER_FORMAT:String", "kind" : "lazy val"}, {"label" : "ARCHIVE_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.ARCHIVE_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#ARCHIVE_DIR:String", "kind" : "lazy val"}, {"label" : "PROCESSING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.PROCESSING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#PROCESSING_DIR:String", "kind" : "lazy val"}, {"label" : "LANDING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.LANDING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#LANDING_DIR:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/AppConfig.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.ArchiveFiles", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "archiveFiles", "tail" : "(location: String, srcPath: String, writemode: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.ArchiveFiles.archiveFiles", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#archiveFiles(location:String,srcPath:String,writemode:String):Unit", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/ArchiveFiles.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.ConvNonStdDateTimes", "members_trait" : [{"label" : "convNonStdDateTimes", "tail" : "(df: DataFrame, dtTmCols: Map[String, String], tgtSchema: StructType, errorThresholdPercent: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.ConvNonStdDateTimes.convNonStdDateTimes", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#convNonStdDateTimes(df:org.apache.spark.sql.DataFrame,dtTmCols:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType,errorThresholdPercent:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/ConvNonStdDateTimes.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.DataTypeValidation", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "dataTypeValidation", "tail" : "(convSrcDttmDF: DataFrame, srcDF: DataFrame, srcConvSchema: StructType, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.DataTypeValidation.dataTypeValidation", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#dataTypeValidation(convSrcDttmDF:org.apache.spark.sql.DataFrame,srcDF:org.apache.spark.sql.DataFrame,srcConvSchema:org.apache.spark.sql.types.StructType,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "getTargetSelList", "tail" : "(schema: StructType, custTransMap: Map[String, String]): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetSelList.getTargetSelList", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#getTargetSelList(schema:org.apache.spark.sql.types.StructType,custTransMap:Map[String,String]):String", "kind" : "def"}, {"label" : "getTargetValidationFilter", "tail" : "(schema: StructType): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetValidationFilter.getTargetValidationFilter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#getTargetValidationFilter(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/DataTypeValidation.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.DropdwsCols", "members_trait" : [{"label" : "dropdwsCols", "tail" : "(schema: StructType, processCols: Seq[String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.DropdwsCols.dropdwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#dropdwsCols(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/DropdwsCols.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.Exceptions", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.ExtractTaggedColumns", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "extractTaggedColumns", "tail" : "(fileName: String, filePattern: String, tokenList: Array[String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.ExtractTaggedColumns.extractTaggedColumns", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#extractTaggedColumns(fileName:String,filePattern:String,tokenList:Array[String]):Map[String,String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/ExtractTaggedColumns.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.FSManager", "members_trait" : [{"label" : "moveData", "tail" : "(sourceURI: Path, targetURI: Path, filePattern: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.moveData", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#moveData(sourceURI:org.apache.hadoop.fs.Path,targetURI:org.apache.hadoop.fs.Path,filePattern:String):Unit", "kind" : "def"}, {"label" : "getRunId", "tail" : "(): String", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.getRunId", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#getRunId:String", "kind" : "def"}, {"label" : "s3Utils", "tail" : ": AwsUtils", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.s3Utils", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#s3Utils:io.github.bkosaraju.utils.aws.AwsUtils", "kind" : "val"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/FSManager.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.GetCuratedDF", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "getCuratedDF", "tail" : "(sourceFile: String, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.GetCuratedDF.getCuratedDF", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#getCuratedDF(sourceFile:String,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getExternalSchema", "tail" : "(schemaFile: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.GetExternalSchema.getExternalSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#getExternalSchema(schemaFile:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getDttmCols", "tail" : "(sch: StructType, dtTmCols: Map[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.GetDttmCols.getDttmCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#getDttmCols(sch:org.apache.spark.sql.types.StructType,dtTmCols:Map[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "loadFixedWidthFile", "tail" : "(path: String, recordLayout: String, cleanseChar: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadFixedWidthFile.loadFixedWidthFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#loadFixedWidthFile(path:String,recordLayout:String,cleanseChar:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "dataTypeValidation", "tail" : "(convSrcDttmDF: DataFrame, srcDF: DataFrame, srcConvSchema: StructType, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.DataTypeValidation.dataTypeValidation", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#dataTypeValidation(convSrcDttmDF:org.apache.spark.sql.DataFrame,srcDF:org.apache.spark.sql.DataFrame,srcConvSchema:org.apache.spark.sql.types.StructType,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getTargetValidationFilter", "tail" : "(schema: StructType): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetValidationFilter.getTargetValidationFilter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#getTargetValidationFilter(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "getTargetSelList", "tail" : "(schema: StructType, custTransMap: Map[String, String]): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetSelList.getTargetSelList", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#getTargetSelList(schema:org.apache.spark.sql.types.StructType,custTransMap:Map[String,String]):String", "kind" : "def"}, {"label" : "amendDwsCols", "tail" : "(stgDF: DataFrame, dwsVals: Map[String, String], tgtSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.AmendDwsCols.amendDwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#amendDwsCols(stgDF:org.apache.spark.sql.DataFrame,dwsVals:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "convNonStdDateTimes", "tail" : "(df: DataFrame, dtTmCols: Map[String, String], tgtSchema: StructType, errorThresholdPercent: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.ConvNonStdDateTimes.convNonStdDateTimes", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#convNonStdDateTimes(df:org.apache.spark.sql.DataFrame,dtTmCols:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType,errorThresholdPercent:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "loadDataFile", "tail" : "(path: String, recDelimiter: String, fieldDelimiter: String, cleanseChar: String, readerFormat: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadDataFile.loadDataFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#loadDataFile(path:String,recDelimiter:String,fieldDelimiter:String,cleanseChar:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "loadRdd", "tail" : "(path: String, readerFormat: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[(String, String)]", "member" : "io.github.bkosaraju.inferencer.functions.LoadRdd.loadRdd", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#loadRdd(path:String,readerFormat:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[(String,String)]", "kind" : "def"}, {"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "loadStdDF", "tail" : "(path: String, readerFormat: String, readerOptions: Map[String, String], recordSchema: StructType, conRecordSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadStdDF.loadStdDF", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#loadStdDF(path:String,readerFormat:String,readerOptions:Map[String,String],recordSchema:org.apache.spark.sql.types.StructType,conRecordSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "isSchemaSame", "tail" : "(schema1: StructType, schema2: StructType): Boolean", "member" : "io.github.bkosaraju.inferencer.functions.IsSchemaSame.isSchemaSame", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#isSchemaSame(schema1:org.apache.spark.sql.types.StructType,schema2:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "getStgSchema", "tail" : "(schema: StructType, processCols: Seq[String], mappings: Map[String, String]): Array[StructType]", "member" : "io.github.bkosaraju.inferencer.functions.GetStgSchema.getStgSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#getStgSchema(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String],mappings:Map[String,String]):Array[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "srcToTgtColSchemaChange", "tail" : "(schema: StructType, mappings: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColSchemaChange.srcToTgtColSchemaChange", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#srcToTgtColSchemaChange(schema:org.apache.spark.sql.types.StructType,mappings:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "dropdwsCols", "tail" : "(schema: StructType, processCols: Seq[String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.DropdwsCols.dropdwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#dropdwsCols(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String, readerFormat: String, readerOptions: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#loadSchema(databaseName:String,tableName:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#loadSchema(databaseName:String,tableName:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(sourceDatabase: String, sourceTable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#readFromTable(sourceDatabase:String,sourceTable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(dbtable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#readFromTable(dbtable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#readFromTable(readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "hadoopfs", "tail" : "(): FileSystem", "member" : "io.github.bkosaraju.utils.spark.Context.hadoopfs", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#hadoopfs:org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/GetCuratedDF.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.GetDttmCols", "members_trait" : [{"label" : "getDttmCols", "tail" : "(sch: StructType, dtTmCols: Map[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.GetDttmCols.getDttmCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#getDttmCols(sch:org.apache.spark.sql.types.StructType,dtTmCols:Map[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/GetDttmCols.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.GetExternalSchema", "members_trait" : [{"label" : "getExternalSchema", "tail" : "(schemaFile: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.GetExternalSchema.getExternalSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#getExternalSchema(schemaFile:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/GetExternalSchema.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.GetLatestDataSets", "members_trait" : [{"label" : "getLatestDataSets", "tail" : "(location: String, readerFormat: String, writeMode: String): Array[String]", "member" : "io.github.bkosaraju.inferencer.functions.GetLatestDataSets.getLatestDataSets", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#getLatestDataSets(location:String,readerFormat:String,writeMode:String):Array[String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/GetLatestDataSets.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.GetStgSchema", "members_trait" : [{"label" : "getStgSchema", "tail" : "(schema: StructType, processCols: Seq[String], mappings: Map[String, String]): Array[StructType]", "member" : "io.github.bkosaraju.inferencer.functions.GetStgSchema.getStgSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#getStgSchema(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String],mappings:Map[String,String]):Array[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "srcToTgtColSchemaChange", "tail" : "(schema: StructType, mappings: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColSchemaChange.srcToTgtColSchemaChange", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#srcToTgtColSchemaChange(schema:org.apache.spark.sql.types.StructType,mappings:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "dropdwsCols", "tail" : "(schema: StructType, processCols: Seq[String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.DropdwsCols.dropdwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#dropdwsCols(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/GetStgSchema.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.GetTargetSelList", "members_trait" : [{"label" : "getTargetSelList", "tail" : "(schema: StructType, custTransMap: Map[String, String]): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetSelList.getTargetSelList", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#getTargetSelList(schema:org.apache.spark.sql.types.StructType,custTransMap:Map[String,String]):String", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetSelList.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.GetTargetValidationFilter", "members_trait" : [{"label" : "getTargetValidationFilter", "tail" : "(schema: StructType): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetValidationFilter.getTargetValidationFilter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#getTargetValidationFilter(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/GetTargetValidationFilter.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.HeaderToColumns", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "headerToColumns", "tail" : "(path: String, props: Properties): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.HeaderToColumns.headerToColumns", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#headerToColumns(path:String,props:java.util.Properties):Map[String,String]", "kind" : "def"}, {"label" : "extractTaggedColumns", "tail" : "(fileName: String, filePattern: String, tokenList: Array[String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.ExtractTaggedColumns.extractTaggedColumns", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#extractTaggedColumns(fileName:String,filePattern:String,tokenList:Array[String]):Map[String,String]", "kind" : "def"}, {"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/HeaderToColumns.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.IsSchemaSame", "members_trait" : [{"label" : "isSchemaSame", "tail" : "(schema1: StructType, schema2: StructType): Boolean", "member" : "io.github.bkosaraju.inferencer.functions.IsSchemaSame.isSchemaSame", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#isSchemaSame(schema1:org.apache.spark.sql.types.StructType,schema2:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/IsSchemaSame.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.LoadDataFile", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "loadDataFile", "tail" : "(path: String, recDelimiter: String, fieldDelimiter: String, cleanseChar: String, readerFormat: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadDataFile.loadDataFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#loadDataFile(path:String,recDelimiter:String,fieldDelimiter:String,cleanseChar:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "loadRdd", "tail" : "(path: String, readerFormat: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[(String, String)]", "member" : "io.github.bkosaraju.inferencer.functions.LoadRdd.loadRdd", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#loadRdd(path:String,readerFormat:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[(String,String)]", "kind" : "def"}, {"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadDataFile.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.LoadFixedWidthFile", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "loadFixedWidthFile", "tail" : "(path: String, recordLayout: String, cleanseChar: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadFixedWidthFile.loadFixedWidthFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#loadFixedWidthFile(path:String,recordLayout:String,cleanseChar:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "loadRdd", "tail" : "(path: String, readerFormat: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[(String, String)]", "member" : "io.github.bkosaraju.inferencer.functions.LoadRdd.loadRdd", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#loadRdd(path:String,readerFormat:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[(String,String)]", "kind" : "def"}, {"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadFixedWidthFile.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.LoadRdd", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "loadRdd", "tail" : "(path: String, readerFormat: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[(String, String)]", "member" : "io.github.bkosaraju.inferencer.functions.LoadRdd.loadRdd", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#loadRdd(path:String,readerFormat:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[(String,String)]", "kind" : "def"}, {"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadRdd.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.LoadSchema", "members_trait" : [{"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String, readerFormat: String, readerOptions: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#loadSchema(databaseName:String,tableName:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#loadSchema(databaseName:String,tableName:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(sourceDatabase: String, sourceTable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#readFromTable(sourceDatabase:String,sourceTable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(dbtable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#readFromTable(dbtable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#readFromTable(readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "hadoopfs", "tail" : "(): FileSystem", "member" : "io.github.bkosaraju.utils.spark.Context.hadoopfs", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#hadoopfs:org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadSchema.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.LoadStdDF", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "loadStdDF", "tail" : "(path: String, readerFormat: String, readerOptions: Map[String, String], recordSchema: StructType, conRecordSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadStdDF.loadStdDF", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#loadStdDF(path:String,readerFormat:String,readerOptions:Map[String,String],recordSchema:org.apache.spark.sql.types.StructType,conRecordSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "isSchemaSame", "tail" : "(schema1: StructType, schema2: StructType): Boolean", "member" : "io.github.bkosaraju.inferencer.functions.IsSchemaSame.isSchemaSame", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#isSchemaSame(schema1:org.apache.spark.sql.types.StructType,schema2:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadStdDF.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.LoadTableandRegister", "members_trait" : [{"label" : "loadTableandRegister", "tail" : "(hiveDatabase: String, hiveTable: String, tempView: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableandRegister.loadTableandRegister", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#loadTableandRegister(hiveDatabase:String,hiveTable:String,tempView:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableandRegister.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.LoadTableVars", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "loadTableVars", "tail" : "(configMap: LinkedHashMap[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableVars.loadTableVars", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#loadTableVars(configMap:scala.collection.mutable.LinkedHashMap[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/LoadTableVars.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.RemoveHdfsData", "members_trait" : [{"label" : "removeHdfsData", "tail" : "(location: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHdfsData.removeHdfsData", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#removeHdfsData(location:String):Unit", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHdfsData.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter", "members_trait" : [{"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/RemoveHeaderAndFooter.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.SchemaFlattener", "shortDescription" : "", "object" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html", "members_class" : [{"label" : "DataHashGenerator", "tail" : "", "member" : "io.github.bkosaraju.utils.spark.DataHashGenerator.DataHashGenerator", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#DataHashGeneratorextendsSession", "kind" : "implicit class"}, {"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "flatStruct", "tail" : "(jDF: DataFrame, nestedColSep: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.SchemaFlattener.flatStruct", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#flatStruct(jDF:org.apache.spark.sql.DataFrame,nestedColSep:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "explodeDF", "tail" : "(df: DataFrame): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.SchemaFlattener.explodeDF", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#explodeDF(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getArrayColList", "tail" : "(schema: StructType): Seq[String]", "member" : "io.github.bkosaraju.inferencer.functions.SchemaFlattener.getArrayColList", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getArrayColList(schema:org.apache.spark.sql.types.StructType):Seq[String]", "kind" : "def"}, {"label" : "flattenColList", "tail" : "(schema: StructType, pfx: String): Array[String]", "member" : "io.github.bkosaraju.inferencer.functions.SchemaFlattener.flattenColList", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#flattenColList(schema:org.apache.spark.sql.types.StructType,pfx:String):Array[String]", "kind" : "def"}, {"member" : "io.github.bkosaraju.inferencer.functions.SchemaFlattener#<init>", "error" : "unsupported entity"}, {"label" : "loadCustomProperties", "tail" : "(hadoopfs: FileSystem, propfl: String, prop: Properties): Properties", "member" : "io.github.bkosaraju.inferencer.LoadProperties.loadCustomProperties", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadCustomProperties(hadoopfs:org.apache.hadoop.fs.FileSystem,propfl:String,prop:java.util.Properties):java.util.Properties", "kind" : "def"}, {"label" : "loadLocalappProps", "tail" : "(appProps: String): Properties", "member" : "io.github.bkosaraju.inferencer.LoadProperties.loadLocalappProps", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadLocalappProps(appProps:String):java.util.Properties", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.github.bkosaraju.inferencer.LoadProperties.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "MANAGED_PROVIDER", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.MANAGED_PROVIDER", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#MANAGED_PROVIDER:String", "kind" : "lazy val"}, {"label" : "WRITER_FORMAT", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.WRITER_FORMAT", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#WRITER_FORMAT:String", "kind" : "lazy val"}, {"label" : "ARCHIVE_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.ARCHIVE_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#ARCHIVE_DIR:String", "kind" : "lazy val"}, {"label" : "PROCESSING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.PROCESSING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#PROCESSING_DIR:String", "kind" : "lazy val"}, {"label" : "LANDING_DIR", "tail" : ": String", "member" : "io.github.bkosaraju.inferencer.functions.AppConfig.LANDING_DIR", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#LANDING_DIR:String", "kind" : "lazy val"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, dbtable: String, writeMode: String, writerOptions: Map[String, String]): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,dbtable:String,writeMode:String,writerOptions:Map[String,String]):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(Df: DataFrame, targetPath: String, writeFormat: String, writeMode: String, writerOptions: Map[String, String], partitionColumns: String): Unit", "member" : "io.github.bkosaraju.utils.spark.WriteData.writeDataFrame", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#writeDataFrame(Df:org.apache.spark.sql.DataFrame,targetPath:String,writeFormat:String,writeMode:String,writerOptions:Map[String,String],partitionColumns:String):Unit", "kind" : "def"}, {"label" : "getNumParts", "tail" : "(Df: DataFrame, blockSize: Long): DataFrame", "member" : "io.github.bkosaraju.utils.spark.WriteData.getNumParts", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getNumParts(Df:org.apache.spark.sql.DataFrame,blockSize:Long):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "moveData", "tail" : "(sourceURI: Path, targetURI: Path, filePattern: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.moveData", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#moveData(sourceURI:org.apache.hadoop.fs.Path,targetURI:org.apache.hadoop.fs.Path,filePattern:String):Unit", "kind" : "def"}, {"label" : "getRunId", "tail" : "(): String", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.getRunId", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getRunId:String", "kind" : "def"}, {"label" : "s3Utils", "tail" : ": AwsUtils", "member" : "io.github.bkosaraju.inferencer.functions.FSManager.s3Utils", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#s3Utils:io.github.bkosaraju.utils.aws.AwsUtils", "kind" : "val"}, {"label" : "headerToColumns", "tail" : "(path: String, props: Properties): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.HeaderToColumns.headerToColumns", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#headerToColumns(path:String,props:java.util.Properties):Map[String,String]", "kind" : "def"}, {"label" : "archiveFiles", "tail" : "(location: String, srcPath: String, writemode: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.ArchiveFiles.archiveFiles", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#archiveFiles(location:String,srcPath:String,writemode:String):Unit", "kind" : "def"}, {"label" : "extractTaggedColumns", "tail" : "(fileName: String, filePattern: String, tokenList: Array[String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.ExtractTaggedColumns.extractTaggedColumns", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#extractTaggedColumns(fileName:String,filePattern:String,tokenList:Array[String]):Map[String,String]", "kind" : "def"}, {"label" : "getLatestDataSets", "tail" : "(location: String, readerFormat: String, writeMode: String): Array[String]", "member" : "io.github.bkosaraju.inferencer.functions.GetLatestDataSets.getLatestDataSets", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getLatestDataSets(location:String,readerFormat:String,writeMode:String):Array[String]", "kind" : "def"}, {"label" : "loadTableandRegister", "tail" : "(hiveDatabase: String, hiveTable: String, tempView: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableandRegister.loadTableandRegister", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadTableandRegister(hiveDatabase:String,hiveTable:String,tempView:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "writeHiveTable", "tail" : "(tDf: DataFrame, hiveDB: String, hiveTable: String, writeMode: String, partitionCols: String, curationFlag: String, dataSize: Int): Unit", "member" : "io.github.bkosaraju.inferencer.functions.WriteHiveTable.writeHiveTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#writeHiveTable(tDf:org.apache.spark.sql.DataFrame,hiveDB:String,hiveTable:String,writeMode:String,partitionCols:String,curationFlag:String,dataSize:Int):Unit", "kind" : "def"}, {"label" : "removeHdfsData", "tail" : "(location: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHdfsData.removeHdfsData", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#removeHdfsData(location:String):Unit", "kind" : "def"}, {"label" : "loadTableVars", "tail" : "(configMap: LinkedHashMap[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableVars.loadTableVars", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadTableVars(configMap:scala.collection.mutable.LinkedHashMap[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "srcToTgtColRename", "tail" : "(df: DataFrame, mappings: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColRename.srcToTgtColRename", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#srcToTgtColRename(df:org.apache.spark.sql.DataFrame,mappings:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getCuratedDF", "tail" : "(sourceFile: String, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.GetCuratedDF.getCuratedDF", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getCuratedDF(sourceFile:String,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getExternalSchema", "tail" : "(schemaFile: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.GetExternalSchema.getExternalSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getExternalSchema(schemaFile:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getDttmCols", "tail" : "(sch: StructType, dtTmCols: Map[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.GetDttmCols.getDttmCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getDttmCols(sch:org.apache.spark.sql.types.StructType,dtTmCols:Map[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "loadFixedWidthFile", "tail" : "(path: String, recordLayout: String, cleanseChar: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadFixedWidthFile.loadFixedWidthFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadFixedWidthFile(path:String,recordLayout:String,cleanseChar:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "dataTypeValidation", "tail" : "(convSrcDttmDF: DataFrame, srcDF: DataFrame, srcConvSchema: StructType, props: Properties): Array[DataFrame]", "member" : "io.github.bkosaraju.inferencer.functions.DataTypeValidation.dataTypeValidation", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#dataTypeValidation(convSrcDttmDF:org.apache.spark.sql.DataFrame,srcDF:org.apache.spark.sql.DataFrame,srcConvSchema:org.apache.spark.sql.types.StructType,props:java.util.Properties):Array[org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "getTargetValidationFilter", "tail" : "(schema: StructType): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetValidationFilter.getTargetValidationFilter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getTargetValidationFilter(schema:org.apache.spark.sql.types.StructType):String", "kind" : "def"}, {"label" : "getTargetSelList", "tail" : "(schema: StructType, custTransMap: Map[String, String]): String", "member" : "io.github.bkosaraju.inferencer.functions.GetTargetSelList.getTargetSelList", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getTargetSelList(schema:org.apache.spark.sql.types.StructType,custTransMap:Map[String,String]):String", "kind" : "def"}, {"label" : "amendDwsCols", "tail" : "(stgDF: DataFrame, dwsVals: Map[String, String], tgtSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.AmendDwsCols.amendDwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#amendDwsCols(stgDF:org.apache.spark.sql.DataFrame,dwsVals:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "convNonStdDateTimes", "tail" : "(df: DataFrame, dtTmCols: Map[String, String], tgtSchema: StructType, errorThresholdPercent: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.ConvNonStdDateTimes.convNonStdDateTimes", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#convNonStdDateTimes(df:org.apache.spark.sql.DataFrame,dtTmCols:Map[String,String],tgtSchema:org.apache.spark.sql.types.StructType,errorThresholdPercent:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "loadDataFile", "tail" : "(path: String, recDelimiter: String, fieldDelimiter: String, cleanseChar: String, readerFormat: String, readerOptions: Map[String, String]): RDD[Row]", "member" : "io.github.bkosaraju.inferencer.functions.LoadDataFile.loadDataFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadDataFile(path:String,recDelimiter:String,fieldDelimiter:String,cleanseChar:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[org.apache.spark.sql.Row]", "kind" : "def"}, {"label" : "loadRdd", "tail" : "(path: String, readerFormat: String, recDelimiter: String, readerOptions: Map[String, String]): RDD[(String, String)]", "member" : "io.github.bkosaraju.inferencer.functions.LoadRdd.loadRdd", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadRdd(path:String,readerFormat:String,recDelimiter:String,readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[(String,String)]", "kind" : "def"}, {"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "removeHeaderAndFooter", "tail" : "(rdd: RDD[String], readerOptions: Map[String, String]): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHeaderAndFooter.removeHeaderAndFooter", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#removeHeaderAndFooter(rdd:org.apache.spark.rdd.RDD[String],readerOptions:Map[String,String]):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "loadStdDF", "tail" : "(path: String, readerFormat: String, readerOptions: Map[String, String], recordSchema: StructType, conRecordSchema: StructType): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.LoadStdDF.loadStdDF", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadStdDF(path:String,readerFormat:String,readerOptions:Map[String,String],recordSchema:org.apache.spark.sql.types.StructType,conRecordSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "isSchemaSame", "tail" : "(schema1: StructType, schema2: StructType): Boolean", "member" : "io.github.bkosaraju.inferencer.functions.IsSchemaSame.isSchemaSame", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#isSchemaSame(schema1:org.apache.spark.sql.types.StructType,schema2:org.apache.spark.sql.types.StructType):Boolean", "kind" : "def"}, {"label" : "getStgSchema", "tail" : "(schema: StructType, processCols: Seq[String], mappings: Map[String, String]): Array[StructType]", "member" : "io.github.bkosaraju.inferencer.functions.GetStgSchema.getStgSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getStgSchema(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String],mappings:Map[String,String]):Array[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "srcToTgtColSchemaChange", "tail" : "(schema: StructType, mappings: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColSchemaChange.srcToTgtColSchemaChange", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#srcToTgtColSchemaChange(schema:org.apache.spark.sql.types.StructType,mappings:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "dropdwsCols", "tail" : "(schema: StructType, processCols: Seq[String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.DropdwsCols.dropdwsCols", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#dropdwsCols(schema:org.apache.spark.sql.types.StructType,processCols:Seq[String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String, readerFormat: String, readerOptions: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadSchema(databaseName:String,tableName:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "loadSchema", "tail" : "(databaseName: String, tableName: String): StructType", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.loadSchema", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#loadSchema(databaseName:String,tableName:String):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.LoadSchema.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(sourceDatabase: String, sourceTable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#readFromTable(sourceDatabase:String,sourceTable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(dbtable: String, readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#readFromTable(dbtable:String,readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "readFromTable", "tail" : "(readerFormat: String, readerOptions: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.utils.spark.ReadFromTable.readFromTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#readFromTable(readerFormat:String,readerOptions:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "hadoopfs", "tail" : "(): FileSystem", "member" : "io.github.bkosaraju.utils.spark.Context.hadoopfs", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#hadoopfs:org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(dataFrame: DataFrame, netstedColSep: String): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.SchemaFlattener.apply", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#apply(dataFrame:org.apache.spark.sql.DataFrame,netstedColSep:String):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/github\/bkosaraju\/inferencer\/functions\/SchemaFlattener.html", "kind" : "class"}, {"name" : "io.github.bkosaraju.inferencer.functions.Session", "members_trait" : [{"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/Session.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColRename", "members_trait" : [{"label" : "srcToTgtColRename", "tail" : "(df: DataFrame, mappings: Map[String, String]): DataFrame", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColRename.srcToTgtColRename", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#srcToTgtColRename(df:org.apache.spark.sql.DataFrame,mappings:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColRename.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColSchemaChange", "members_trait" : [{"label" : "srcToTgtColSchemaChange", "tail" : "(schema: StructType, mappings: Map[String, String]): StructType", "member" : "io.github.bkosaraju.inferencer.functions.SrcToTgtColSchemaChange.srcToTgtColSchemaChange", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#srcToTgtColSchemaChange(schema:org.apache.spark.sql.types.StructType,mappings:Map[String,String]):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/SrcToTgtColSchemaChange.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.StringToMap", "members_trait" : [{"label" : "stringToMap", "tail" : "(extParams: String): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.StringToMap.stringToMap", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#stringToMap(extParams:String):Map[String,String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/StringToMap.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.UnzipFile", "members_trait" : [{"label" : "unzipFile", "tail" : "(path: String): RDD[String]", "member" : "io.github.bkosaraju.inferencer.functions.UnzipFile.unzipFile", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#unzipFile(path:String):org.apache.spark.rdd.RDD[String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/UnzipFile.html", "kind" : "trait"}, {"name" : "io.github.bkosaraju.inferencer.functions.WriteHiveTable", "members_trait" : [{"label" : "InvalidCopyBookOption", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.InvalidCopyBookOption", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#InvalidCopyBookOptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "HeaderFormatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.HeaderFormatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#HeaderFormatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "FileRenameExcetpion", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.FileRenameExcetpion", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#FileRenameExcetpionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptyInputFileException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptyInputFileException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptyInputFileExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "ErrorRecordThresholdException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.ErrorRecordThresholdException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#ErrorRecordThresholdExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "PatternMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.PatternMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#PatternMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "TokenCountException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.TokenCountException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#TokenCountExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedRecordLayoutException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedRecordLayoutException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedRecordLayoutExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "UnsupportedFileformatException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.UnsupportedFileformatException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#UnsupportedFileformatExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "SchemaMismatchException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.SchemaMismatchException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#SchemaMismatchExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "EmptySchemaException", "tail" : "", "member" : "io.github.bkosaraju.inferencer.functions.Exceptions.EmptySchemaException", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/Exceptions.html#EmptySchemaExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "writeHiveTable", "tail" : "(tDf: DataFrame, hiveDB: String, hiveTable: String, writeMode: String, partitionCols: String, curationFlag: String, dataSize: Int): Unit", "member" : "io.github.bkosaraju.inferencer.functions.WriteHiveTable.writeHiveTable", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#writeHiveTable(tDf:org.apache.spark.sql.DataFrame,hiveDB:String,hiveTable:String,writeMode:String,partitionCols:String,curationFlag:String,dataSize:Int):Unit", "kind" : "def"}, {"label" : "removeHdfsData", "tail" : "(location: String): Unit", "member" : "io.github.bkosaraju.inferencer.functions.RemoveHdfsData.removeHdfsData", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#removeHdfsData(location:String):Unit", "kind" : "def"}, {"label" : "loadTableVars", "tail" : "(configMap: LinkedHashMap[String, String]): Map[String, String]", "member" : "io.github.bkosaraju.inferencer.functions.LoadTableVars.loadTableVars", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#loadTableVars(configMap:scala.collection.mutable.LinkedHashMap[String,String]):Map[String,String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.github.bkosaraju.inferencer.functions.Session.sparkSession", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "logger", "tail" : "(): Logger", "member" : "io.github.bkosaraju.inferencer.functions.Session.logger", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#logger:org.slf4j.Logger", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/github\/bkosaraju\/inferencer\/functions\/WriteHiveTable.html", "kind" : "trait"}]};